# Load upstream windows vagrant file with common settings
windows_vagrantfile = File.expand_path("../../VagrantWindows.rb", __FILE__)
load windows_vagrantfile if File.exist?(windows_vagrantfile)

Vagrant.configure("2") do |config|
  config.vm.box = "win2003x86"

  config.vm.provider :vmware_fusion do |v, override|
    #override.vm.box_url = "nowhere"
  end

  config.vm.provider :virtualbox do |v, override|
    #override.vm.box_url = "nowhere"
    override.vm.network :private_network, ip: "192.168.0.3"
    #really memory suppress settings
    #v.customize ["modifyvm", :id, "--memory", "356"]
    #v.customize ["modifyvm", :id, "--cpus", 1]
    #v.customize ["modifyvm", :id, "--vram", 16]
  end

  # config.vm.synced_folder "puppet/box_modules", "/ProgramData/PuppetLabs/puppet/etc/modules"
  # config.vm.synced_folder "puppet/box_modules", "/DOCUME~1/ALLUSE~1/APPLIC~1/PUPPET~1/puppet/etc/modules"

  # # This shell provisioner installs chocolatey, ruby, and puppet. Also runs librarian-puppet.
  config.vm.provision :shell, :path => "../shared/shell/PrepareWindows.ps1"
  config.vm.provision :shell, :path => "../shared/shell/InstallNet4.ps1"
  config.vm.provision :shell, :path => "../shared/shell/InstallChocolatey.ps1"
  config.vm.provision :shell, :path => "../shared/shell/InstallPuppetFromMSI.ps1"

  # Enable provisioning with Puppet stand alone.  Puppet manifests
  # are contained in a directory path relative to this Vagrantfile.
  config.vm.provision :puppet, :options => ["--debug --trace --verbose"] do |puppet|
    puppet.manifests_path = "puppet/manifests"
    puppet.manifest_file  = "site.pp"
    puppet.module_path = "puppet/modules"
    puppet.facter = {
      "domain" => "local",
      "kernel" => "windows",
      "operatingsystem" => "windows",
      "osfamily" => "windows",
    }
  end
end
